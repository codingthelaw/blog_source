num_vect <- vector(0.5,55,-10)
num_vect <- c(0.5,55,-10))
num_vect <- c(0.5,55,-10,6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("my", "name", "is")
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
c(my_char, "Dimitris")
my_name <- c(my_char, "Dimitris")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world", sep = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z"), sep ="")
paste(LETTERS, 1:4, sep "-")
paste(LETTERS, 1:4, sep ="-")
quit()
sessionInfo()
quit()
library(swirl)
swirl()
x <- c(44,NA,5,NA)
x * 3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(C(y,z),100)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf-Inf
quit
quit()
library(swirl)
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x >0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar =2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect,vect2)
vect["bar"]
vect[c("foo","bar")]
quit()
library(swirl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cdind(patients, my_matrix)
cbind(patients, my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data,cnames)
colnames(cnames,my_data)
colnames(cnames)
colnames(my_data) <- cnames
my_data
quit()
library(swirl)
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 !== 7
5 != 7
5 !== 7
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE,FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE,FALSE, FALSE)
TRUE || c(TRUE,FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints, >7)
which(ints, 7)
which(ints)
which(ints) > 7
which(ints > 7)
any(ints < 0)
all(ints > 0)
quit()
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create(mytest.R)
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1','folder2')
?dir.create
play
play()
getwd()
nxt()
dir.create()
dir.create(file.path('testdir2','testdir3'))
dir.create(file.path('testdir2','testdir3'), recursive = T)
dir.create(file.path('testdir2','testdir3'), recursive = TRUE)
?unlink
unlink(testdir2, recursive = T)
unlink('testdir2', recursive = T)
setwd(old.dir)
quit()
library(swirl)
swirl()
df
unlink("testdir", recursive = TRUE)
library(readr)
datapath
print(datapath)
datafile <- file.path("C:/Program Files/Microsoft/MRO/R-3.2.4/library/swirl/Courses/The_R_Programming_Environment/Reading_Tabular_Data")
datafile <- file.path(datapath,"urban.csv.gz")
urban <- read.csv("urban.csv.gz")
urban <- read.csv(urban.csv.gz)
urban <- read_csv(urban.csv.gz)
urban <- read_csv("urban.csv.gz")
gdf
nytgs
drsg
S
sgf
sdg
urban <- read_csv("C:/Program Files/Microsoft/MRO/R-3.2.4/library/swirl/Courses/The_R_Programming_Environment/Reading_Tabular_Data/urban.csv.gz")
urban <- read_csv(/urban.csv.gz)
urban <- read_csv("/urban.csv.gz")
getwd()
urban <- read_csv(datafile)
head(urban)
urban <- read_csv(datafile, col_types = i,c,c,c,i)
?read_csv
urban <- read_csv(datafile, col_types = "iccii")
urban <- read_csv(datafile, col_types = cols_only(zcta5 = c))
urban <- read_csv(datafile, col_types = cols_only(zcta5 = character()))
urban <- read_csv(datafile, col_types = cols_only(zcta5 = character)
)
urban <- read_csv(datafile, col_types = cols_only(zcta5 = col_character))
urban <- read_csv(datafile, zcta5 = col_character)
urban <- read_csv(datafile, "zcta5' = col_character)
)
)
hkj
vfS
VSd
f
ew)(*^0)
}
}}09789
)))))
)))))))))))))))))))0
quit
0
exit
swirl()
))))))
z
qqsample()
play*()
*7
end()
?
daesFqqqqqqew
few
t
e568
i
yw
T
342Y6
5
36
U
869E
*(&)
library(swirl)
swirl()
urban <- read_csv(datafile, cols(zcta = col_character())
)
urban <- read_csv(datafile, cols("zcta" = col_character()))
urban <- read_csv(datafile),
urban <- read_csv(datafile, col_types = cols(zcta = col_character()))
urban <- read_csv(datafile, col_types = cols(zcta5 = col_character()))
urban <- read_csv(datafile, col_types = cols(zcta5 = col_character()))
urban <- read_csv(datafile, col_types = "cccc"
)
urban <- read_csv(datafile, col_types = "icci"
)
urban <- read_csv(datafile, col_types = "iccii"
)
urban
head(urban)
urban <- read_csv(datafile, col_types = "iccii")
View(urban)
info()
urban <- read_csv(datafile, col_types = "iccii")
urban <- read_csv(datafile, col_types = "ccccc")
urban <- read_csv(datafile, col_types = "_c___")
urban <- read_csv(datafile, col_types = "cc")
urban <- read_csv(datafile, col_types = cols())
urban <- read_csv(datafile, col_types = cols())
urban <- read_csv(datafile, col_types = cols(zcta5 = "c"))
urban <- read_csv(datafile, col_types = cols("zcta5" = "c"))
info()
skip()
urban <- read_csv(datafile, col_types ="cccd" )
urban <- read_csv(datafile, col_types ="cccd_")
urban <- read_csv(datafile, col_types ="cccd-")
head(urban)
urban <- read_csv(datafile, col_types ="cccd-", n_max = 100)
ls()
class(plants)
dims(plants)
dims(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
swirl()
library(swirl)
swirl()
-3 * -16
2 * (-15/2)
2-15/2
2-(15/2)
13/2
48+5,5
48+5.5
-1/2 * (-2)
3 + 1/5
4/5
1/5 + 2/3
4/6
4/3
16/3
24/16
49/15
49/3
49/5
3/2 + 49/15
49*2
15*4
6/8
98/
6
98/60
98/6
98/12
98/24
0 +9
0/7
0 +1
plot(x,y,type="p")
segments(x1,y1,x2,y2)
library(scatterplot3d)
install.packages("scatterplot3d")
library(scatterplot3d)
x <- c(2,3,4)
scatterplot3d(x)
x <- c(1,4,3,6,2,5)
y <- c(2,2,4,3,5,9)
z <- c(1,3,5,9,2,2)
s <- scatterplot3d(x,y,z)
x <- c(2,3,4)
scatterplot3d(x, y = NULL, z = NULL)
scatterplot3d(x = 2, y = 3, z = 4)
library(swirl)
swirl()
bye()
swirl()
bye()
install.packages("swirl")
install.packages("swirl")
library(swirl)
swirl()
bye(\)
bye()
nikifun <- myfunction(x) {
result <- "Hi x"
print(result)
}
nikifun <- myfunction(x) {
result <- "Hi "x"
print(result)
}
nikifun <- function(x) {
result <- "Hi "x"
return(result)
}
nikifun <- function(x) {
result <- "Hi "x"
return(result) }
nikifun <- function(x) {
res <- "Hi "x"
return(res)
}
nikifun <- function(x) {
res <- "Hi "x"
return(res)
}
nikifun <- function(x) {
res <- x
return(res)
}
nikifun(5)
nikifun <- function(x) {
res <- "Hi" x
return(res)
}
nikifun <- function(x) {
res <- 'Hi' x
return(res)
}
print(test)
print("test")
nikifun <- function(x) {
res <-  "test" x
return(res)
}
nikifun <- function(x) {
res <-  c("test",x)
return(res)
}
nikifun(5)
nikifun(dimitris)
nikifun <- function(x) {
res <-  c("Hi",x)
return(res)
}
nikifun(dimitris)
nikifun("dimitris")
nikifun <- function("x") {
res <-  c("Hi",x)
return(res)
}
nikifun <- function(x) {
res <-  x-2
return(res)
}
nikifun(7)
info(])
info()
sessionInfo()
?iris
data(iris)
head(iris)
iris$Species
levels(iris$Species)
x <- 2:10
x
nikifunc <- function(x) {
wra <- x -2
return(wra)
}
nikifunc(8)
x <- 5+7
print(x)
library(datasets)
datasets
data("women")
str(women)
women
boxplot(women)
library(MASS)
data()
data(orange)
data(Orange)
str(Orange)
head(Orange)
Orange$Tree
levels(Orange$Tree)
library(datasets)
data("airquality")
library(datasets)
library(ggplot2)
# Then load the Data
data("airquality")
install.packages("ggplot2")
library(ggplot2)
str(airquality)
head(airquality)
range(airquality$Month)
qplot(data=airquality,x=Month,y=Ozone)
qplot()
qplot(data=airquality,x=Month,y=Ozone, geom = boxplot)
qplot(data=airquality,x=Month,y=Ozone, geom = boxplot)
qplot(data=airquality,x=Month,y=Ozone, geom = "boxplot")
airquality$Month <- factor(airquality$Month,
labels = c("May", "Jun", "Jul", "Aug", "Sep"))
str(airquality)
qplot(data=airquality,x=Month,y=Ozone, geom = "boxplot")
library(swirl)
swirl()
quit()
sqrt(1/2^2 + 1/2^2 + 1/2^2 + 1/2^2)
sqrt(1^2 + -2^2 + 2^2)
sqrt(1 + 4 +4)
install.pacakges("blogdown")
install.packages("blogdown")
updateR()
install.packages("installr")
require(installr)
updateR()
installed.packages("blogdown")
install.packages("blogdown")
library(blogdown)
blogdown::install_hugo()
install.packages(installr)
"installr"
install.packages("installr")
install.packages("data.table")
install.packages("rmarkdown")
library(blogdown)
install_hugo()
new_site(dir = 'C:\Users\Dfist\Desktop\github\blog_source',
theme = 'calintat/minimal',
format = 'toml')
new_site(dir = "C:\Users\Dfist\Desktop\github\blog_source",
theme = "calintat/minimal",
format = "toml")
new_site(dir = "C:\Users\Dfist\Desktop\github\blog_source",
theme = "calintat/minimal",
format = "toml",
)
new_site(dir = "C:\Users\Dfist\Desktop\github\blog_source",
theme = "calintat/minimal",
format = toml
)
new_site(dir = "C:\Users\Dfist\Desktop\github\blog_source",
theme = calintat/minimal,
format = toml,
)
new_site(dir = "C:\Users\Dfist\Desktop\github\blog_source",
theme = calintat/minimal,
format = toml
)
new_site(dir = "C:\Users\Dfist\Desktop\github\blog_source", theme = "calintat/minimal")
new_site(dir = "C:/Users/Dfist/Desktop/github/blog_source", theme = "calintat/minimal")
stop_server()
blogdown:::serve_site()
getwd()
setwd(c:/users/dfist/desktop/github/blog_source)
setwd("c:/users/dfist/desktop/github/blog_source")
serve_site()
stop_server()
serve_site()
stop_server()
serve_site()
servr::daemon_stop("309734584")
